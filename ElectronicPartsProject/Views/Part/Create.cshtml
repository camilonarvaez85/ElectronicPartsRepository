
@model ElectronicPartsProject.Models.DBElectronicPartsModel.part

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<style>
    .ui-autocomplete {
        z-index: 1051; /* Asegura que el autocompletar esté sobre el modal */
    }
</style>


<br />
@using (Html.BeginForm("Create", "Part", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @* @Html.AntiForgeryToken() *@

    <div class="form-horizontal">
        <h4>Create Part</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.part_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.part_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.part_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category_id", null, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.component_value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.component_value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.component_value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.footprint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.footprint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.footprint, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pkg_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pkg_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pkg_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.schematic_symbol_file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.schematic_symbol_file, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.schematic_symbol_file, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.is_active, new { @class = "form-check-input" })
                @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Attach Files</label>
            <div class="col-md-10">
                <input type="file" name="files" multiple class="form-control" />
            </div>
        </div>

        <!-- Tabla de Proveedores Asociados -->
        <div class="form-group">
            <label class="control-label col-md-2">Associated Suppliers</label>
            <div class="col-md-10">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addSupplierModal">Add Supplier</button>

                <!-- Tabla dinámica para los proveedores asociados -->
                <table class="table table-striped mt-3">
                    <thead>
                        <tr>
                            <th>Supplier Name</th>
                            <th>Manufacturer Part Number</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="supplierList">
                        <!-- Esta tabla se llenará dinámicamente con JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Botón de Creación -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="submitForm()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<!-- Modal para agregar o editar proveedores -->
<div class="modal fade" id="addSupplierModal" tabindex="-1" role="dialog" aria-labelledby="addSupplierModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSupplierModalLabel">Add Supplier</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="supplierForm">
                    <!-- Supplier Name (Autocomplete) -->
                    <div class="form-group">
                        <label for="supplierName">Supplier Name</label>
                        <input type="text" class="form-control" id="supplierName" autocomplete="on" required>
                    </div>
                    <!-- Manufacturer Part Number (Autocomplete) -->
                    <div class="form-group">
                        <label for="manufacturerPartNumber">Manufacturer Part Number</label>
                        <input type="text" class="form-control" id="manufacturerPartNumber" autocomplete="on" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addSupplier()">Save Supplier</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {


    <!-- jQuery y jQuery UI para Autocomplete -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(function () {
            // Autocomplete para Supplier Name
            $("#supplierName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetSuppliers", "Supplier")',
                        data: { term: request.term },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 1
            });

            // Autocomplete para Manufacturer Part Number
            $("#manufacturerPartNumber").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetManufacturerPartNumbers", "Supplier")',
                        data: { term: request.term },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 1
            });

            //// Asegurarse de que el modal tiene aria-hidden actualizado
            //$('#addSupplierModal').on('shown.bs.modal', function () {
            //    $(this).attr('aria-hidden', 'false');
            //    $('#supplierName').focus(); // Lleva el foco al campo de autocompletar
            //});

            //$('#addSupplierModal').on('hidden.bs.modal', function () {
            //    $(this).attr('aria-hidden', 'true');
            //});
        });
    </script>

    <script>
        let supplierParts = [];

        function addSupplier() {
            const supplierName = document.getElementById('supplierName').value;
            const manufacturerPartNumber = document.getElementById('manufacturerPartNumber').value;

            if (supplierName && manufacturerPartNumber) {
                supplierParts.push({
                    supplier: {
                        supplier_name: supplierName
                    },
                    manufacturer_part_number: manufacturerPartNumber
                });

                $('#supplierName').val('');
                $('#manufacturerPartNumber').val('');

                updateSupplierTable();
                $('#addSupplierModal').modal('hide');
                $('.modal-backdrop').remove();
                $('body').removeClass('modal-open');
            }
        }

        function updateSupplierTable() {
            const supplierList = document.getElementById('supplierList');
            supplierList.innerHTML = '';

            supplierParts.forEach((supplier, index) => {
                const row = `<tr>
                                                        <td>${supplier.supplier.supplier_name}</td>
                                                        <td>${supplier.manufacturer_part_number}</td>
                                                        <td>
                                                            <button type="button" class="btn btn-danger btn-sm" onclick="removeSupplier(${index})">Delete</button>
                                                        </td>
                                                    </tr>`;
                supplierList.insertAdjacentHTML('beforeend', row);
            });
        }

        function removeSupplier(index) {
            supplierParts.splice(index, 1);
            updateSupplierTable();
        }

        function submitForm() {
            $('<input>').attr({
                type: 'hidden',
                name: 'supplierParts',
                value: JSON.stringify(supplierParts)
            }).appendTo('form');
        }
    </script>
}